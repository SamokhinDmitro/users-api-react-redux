{"version":3,"sources":["hoc/Layout/Layout.module.css","hoc/Auxilialy.js","redux/actions/actionsTypes.js","redux/actions/actions.js","components/Home/User/User.js","components/Home/Home.js","components/Header/Navigation/Navigation.js","components/Header/Header.js","components/Footer/Footer.js","hoc/Layout/Layout.js","components/Posts/Post/Post.js","components/Posts/Posts.js","components/UserInfo/UserInfo.js","components/PostInfo/PostInfo.js","App.js","reportWebVitals.js","redux/reducers/users.js","redux/reducers/posts.js","redux/reducers/userInfo.js","redux/reducers/postInfo.js","redux/rootReducers.js","index.js"],"names":["module","exports","Auxilialy","props","children","SET_USERS","SEARCH_USERS_NAME","SET_USER_POSTS","SET_POSTS","SET_USER_INFO","SET_POST_INFO","SET_POST_AUTHOR","SET_POST_COMMENTS","asyncLoadUsers","dispatch","axios","then","data","type","payload","setUsers","catch","error","console","log","asyncLoadPosts","setPosts","asyncLoadUserInfo","id","setUserInfo","getUserPosts","userId","res","filter","post","setUserPosts","asyncLoadPostInfo","setPostInfo","getPostAuthor","getPostComments","name","username","postId","comment","useStyles","makeStyles","cardContainer","width","cardTitle","fontSize","margin","card","display","jusitfyContent","alignItems","flexDirection","cursor","cardContent","padding","hidden","withRouter","classes","cls","status","push","Grid","item","lg","className","join","Card","variant","align","onClick","history","CardContent","Typography","color","gutterBottom","searchContainer","searchInput","connect","state","users","searchName","onSearchName","event","target","value","onLoadUsers","useEffect","Container","container","spacing","direction","TextField","label","defaultValue","searchTitle","onInput","length","map","index","search","trim","list","link","textDecoration","linkActive","Navigation","List","component","aria-label","to","exact","activeClassName","ListItem","button","ListItemText","primary","title","flexGrow","Header","Fragment","AppBar","position","maxWidth","Toolbar","footer","background","Footer","Layout","main","postContainer","postTitle","fontWeight","transition","postContent","justifyContent","postLink","str","offset","slice","toUpperCase","posts","onLoadPosts","justify","author","info","marginBottom","infoTitle","infoBlock","infoText","infoContent","infoActions","infoLink","border","borderRadius","infoError","accordionHeading","accordionDetails","accordionTitle","table","tableContainer","tableTitle","textAlign","tableCellTitle","postError","createData","descr","userInfo","onLoadData","match","params","rows","phone","email","website","React","useState","expanded","setExpanded","handleChange","panel","isExpanded","userPosts","Box","Accordion","onChange","AccordionSummary","expandIcon","aria-controls","AccordionDetails","infoCard","xs","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","colSpan","TableBody","row","scope","address","zipcode","city","street","suite","geo","lat","lng","company","catchPhrase","bs","CardActions","postText","postAuthor","postActions","commentTitle","commentSubtitle","commentContent","postInfo","comments","prepareStr","commentsList","body","App","path","Home","UserInfo","PostInfo","Posts","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","action","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","reduxThunk","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b0fdf35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__2BEO7\",\"main\":\"Layout_main__3HLJi\"};","const Auxilialy = props => props.children;\r\n\r\nexport default Auxilialy;\r\n","\r\nexport const SET_USERS = 'SET_USERS';\r\nexport const SEARCH_USERS_NAME = 'SET_USERS_NAME'\r\nexport const SET_USER_POSTS = 'SET_USER_POSTS';\r\nexport const SET_POSTS = 'SET_POSTS';\r\nexport const SET_USER_INFO = 'SET_USER_INFO';\r\nexport const SET_POST_INFO = 'SET_POST_INFO';\r\nexport const SET_POST_AUTHOR = 'SET_POST_AUTHOR';\r\nexport const SET_POST_COMMENTS = 'SET_POST_COMMENTS';\r\n\r\n","import {\r\n    SEARCH_USERS_NAME,\r\n    SET_POST_AUTHOR,\r\n    SET_POST_COMMENTS,\r\n    SET_POST_INFO,\r\n    SET_POSTS,\r\n    SET_USER_INFO, SET_USER_POSTS,\r\n    SET_USERS\r\n} from \"./actionsTypes\";\r\nimport axios from \"axios\";\r\n\r\n\r\n//Users\r\nexport const setUsers = data => {\r\n    return {type: SET_USERS, payload: data}\r\n}\r\n\r\n//SearchTitle\r\nexport const setSearchUsersName = name => {\r\n    return {type: SEARCH_USERS_NAME, payload: name}\r\n}\r\n\r\n\r\nexport const asyncLoadUsers = () => {\r\n    return (dispatch) => {\r\n        //Запрос на сервер\r\n        return axios('https://jsonplaceholder.typicode.com/users')\r\n            .then(data => {\r\n                dispatch(setUsers(data.data));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\n//Posts\r\nexport const setPosts = data => {\r\n    return {type: SET_POSTS, payload: data}\r\n}\r\n\r\nexport const asyncLoadPosts = () => {\r\n    return (dispatch) => {\r\n        //Запрос на сервер\r\n        return axios('https://jsonplaceholder.typicode.com/posts')\r\n            .then(data => {\r\n                dispatch(setPosts(data.data))\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\n\r\n//UserInfo\r\nexport const setUserInfo = data => {\r\n    return {type: SET_USER_INFO, payload: data}\r\n}\r\n\r\nexport const asyncLoadUserInfo = id => {\r\n    return (dispatch) => {\r\n\r\n          return  axios(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n                .then(data => {\r\n                    dispatch(setUserInfo(data.data));\r\n\r\n                    dispatch(getUserPosts(data.data.id));\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n    }\r\n}\r\n\r\nexport const setUserPosts = data => {\r\n    return {type: SET_USER_POSTS, payload: data}\r\n}\r\n\r\nexport const getUserPosts = userId => {\r\n    return (dispatch) => {\r\n        return axios(`https://jsonplaceholder.typicode.com/posts`)\r\n            .then(data => {\r\n                const arr = data.data;\r\n                const res = arr.filter(post => {\r\n                    if(post.userId === userId){\r\n                        return post;\r\n                    }else{\r\n                        return null;\r\n                    }\r\n                });\r\n\r\n                dispatch(setUserPosts(res));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\n//PostInfo\r\nexport const setPostInfo = data => {\r\n    return {type: SET_POST_INFO, payload: data}\r\n}\r\n\r\nexport const asyncLoadPostInfo = id => {\r\n    return (dispatch) => {\r\n        return axios(`https://jsonplaceholder.typicode.com/posts/${id}`)\r\n            .then(data => {\r\n                dispatch(setPostInfo(data.data));\r\n                //Post author\r\n                dispatch(getPostAuthor(data.data.userId));\r\n                //Post comments\r\n                dispatch(getPostComments(data.data.id))\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\nexport const setPostAuthor = name => {\r\n    return {type: SET_POST_AUTHOR, payload: name}\r\n}\r\n\r\nexport const getPostAuthor = id => {\r\n    return (dispatch) => {\r\n        return axios(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            .then(data => {\r\n                dispatch(setPostAuthor(data.data.username))\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\nexport const setPostComments = comments => {\r\n    return {type: SET_POST_COMMENTS, payload: comments}\r\n}\r\n\r\nexport const getPostComments = postId => {\r\n    return (dispatch) => {\r\n        return axios(`https://jsonplaceholder.typicode.com/comments`)\r\n            .then(data => {\r\n                const arr = data.data;\r\n                const res = arr.filter(comment => {\r\n                    //Проверка комментариев к посту\r\n                    if(comment.postId === postId){\r\n                        return comment;\r\n                    }else{\r\n                        return null;\r\n                    }\r\n                })\r\n                dispatch(setPostComments(res));\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n//Styles\r\nconst useStyles = makeStyles({\r\n    cardContainer: {\r\n      width: '100%'\r\n    },\r\n    cardTitle: {\r\n        fontSize: '14px',\r\n        margin: 0\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n        jusitfyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        cursor: 'pointer'\r\n    },\r\n    cardContent: {\r\n        //padding: '10px',\r\n        '&:last-child': {\r\n            padding: 10\r\n        }\r\n    },\r\n    hidden: {\r\n        display: 'none!important'\r\n    }\r\n\r\n});\r\n\r\nconst User = props => {\r\n\r\n    const classes = useStyles();\r\n    const cls = [classes.cardContainer];\r\n\r\n    if(props.status){\r\n        cls.push(classes.hidden);\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid item lg={3} className={cls.join(' ')}>\r\n            {/*Card*/}\r\n            <Card className={classes.card}\r\n                  variant=\"outlined\"\r\n                  align=\"center\"\r\n                  onClick={() => props.history.push(`/users/${props.id}`)}\r\n            >\r\n                <CardContent className={classes.cardContent}>\r\n                    <Typography variant=\"h3\" className={classes.cardTitle} color=\"textSecondary\" gutterBottom>\r\n                        Name: <strong>{props.name}</strong>\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            {/*END Card*/}\r\n        </Grid>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default withRouter(User);\r\n","import React, {useEffect} from \"react\";\r\nimport Auxilialy from \"../../hoc/Auxilialy\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport {asyncLoadUsers, setSearchUsersName} from \"../../redux/actions/actions\";\r\n\r\nimport {connect} from 'react-redux';\r\nimport User from \"./User/User\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    searchContainer: {\r\n        width: '100%',\r\n    },\r\n    searchInput: {\r\n        width: '100%',\r\n    }\r\n});\r\n\r\nconst Home = props => {\r\n\r\n    const classes = useStyles();\r\n\r\n    //Декомпозиция метода загрузки данных - обходим предупреждение в useEffect\r\n    const {onLoadUsers} = props;\r\n\r\n    //Аналог componentDidMount - useEffect()\r\n    useEffect( () => {\r\n        onLoadUsers();\r\n    }, [onLoadUsers]);\r\n\r\n\r\n    //FilterStatus\r\n    let status = false;\r\n\r\n    return (\r\n       <Auxilialy>\r\n           <Container>\r\n               <Grid container spacing={2} direction=\"column\" alignItems=\"center\">\r\n\r\n                   <Grid item lg={3} className={classes.searchContainer}>\r\n                           <TextField\r\n                               id=\"search-block\"\r\n                               label=\"Search User\"\r\n                               defaultValue={props.searchTitle}\r\n                               variant=\"outlined\"\r\n                               className={classes.searchInput}\r\n                               onInput={props.onSearchName}\r\n                           />\r\n                   </Grid>\r\n\r\n\r\n                   {props.data.length\r\n                       ? props.data.map((item, index) => {\r\n\r\n                           // Filter Users\r\n                          if(item.name.search(props.searchName.trim()) === -1){\r\n                              status = true;\r\n                          }else{\r\n                              status = false;\r\n                          }\r\n                          // End Filter Users\r\n\r\n                           return (\r\n                               <User key={index} status={status} name={item.name} id={item.id}/>\r\n                           );\r\n                       })\r\n                       : <User name={'No users!'}/>\r\n                   }\r\n\r\n               </Grid>\r\n           </Container>\r\n       </Auxilialy>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.users.data,\r\n        searchName: state.users.searchName\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSearchName: event => {\r\n            dispatch(setSearchUsersName(event.target.value))\r\n        },\r\n        onLoadUsers: () =>  dispatch(asyncLoadUsers())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\n\r\n//Styles\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        display: 'flex',\r\n    },\r\n    link: {\r\n        color: '#fff',\r\n        textDecoration: 'none'\r\n    },\r\n    linkActive: {\r\n        color: 'yellow'\r\n    }\r\n});\r\n\r\n\r\nconst Navigation = props => {\r\n    const classes = useStyles();\r\n    return (\r\n        <List component=\"nav\" aria-label=\"main\" className={classes.list}>\r\n            <NavLink\r\n                to=\"/\"\r\n                exact\r\n                className={classes.link}\r\n                activeClassName={classes.linkActive}>\r\n                <ListItem button>\r\n                    <ListItemText primary=\"Home\"/>\r\n                </ListItem>\r\n            </NavLink>\r\n\r\n            <NavLink to=\"/posts\"\r\n                     className={classes.link}\r\n                     activeClassName={classes.linkActive}>\r\n                <ListItem button>\r\n                    <ListItemText primary=\"Posts\"/>\r\n                </ListItem>\r\n            </NavLink>\r\n        </List>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Navigation from \"./Navigation/Navigation\";\r\n\r\n\r\n//Styles\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        flexGrow: 1,\r\n        margin: 0\r\n    }\r\n});\r\n\r\nconst Header = props => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n       <React.Fragment>\r\n           {/*HEADER*/}\r\n           <AppBar position=\"relative\">\r\n               <Container maxWidth=\"lg\">\r\n                   <Toolbar>\r\n                       <Typography variant=\"h6\" className={classes.title}>\r\n                           React Users Api\r\n                       </Typography>\r\n\r\n                       {/*Navigation*/}\r\n                       <Navigation/>\r\n\r\n                   </Toolbar>\r\n               </Container>\r\n           </AppBar>\r\n           {/*END HEADER*/}\r\n       </React.Fragment>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Auxilialy from \"../../hoc/Auxilialy\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    footer: {\r\n        padding: '20px 0',\r\n        background: '#0B0D17',\r\n        color: '#D9DBE1'\r\n    }\r\n});\r\n\r\nconst Footer = props => {\r\n    const classes = useStyles();\r\n    return (\r\n       <Auxilialy>\r\n           {/*FOOTER*/}\r\n           <footer className={classes.footer}>\r\n               <Typography align=\"center\">\r\n                   &copy; React Users API 2021  Все права защищены\r\n               </Typography>\r\n           </footer>\r\n           {/*END FOOTER*/}\r\n       </Auxilialy>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport classes from './Layout.module.css';\r\n\r\nimport Header from \"../../components/Header/Header\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\n\r\nconst Layout = props => {\r\n    return (\r\n        <div className={classes.Layout}>\r\n            <Header/>\r\n\r\n            <main className={classes.main}>\r\n                {props.children}\r\n            </main>\r\n            \r\n            <Footer/>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n\r\n//Styles\r\nconst useStyles = makeStyles({\r\n\r\n    postContainer: {\r\n        width: '100%'\r\n    },\r\n    postTitle: {\r\n        fontSize: '20px',\r\n        fontWeight: 'bold',\r\n        margin: 0\r\n    },\r\n    post: {\r\n        padding: '10px 20px',\r\n        display: 'flex',\r\n        jusitfyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        transition: 'all 0.5s ease-in',\r\n        '&:hover': {\r\n            background: '#DADADA',\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n    postContent: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        '&:last-child': {\r\n            padding: 10\r\n        }\r\n    },\r\n    postLink: {\r\n        //marginLeft: '15px',\r\n        color: 'red',\r\n        fontSize: '14px',\r\n        '&:hover': {\r\n            textDecoration: 'none',\r\n        }\r\n    }\r\n});\r\n\r\nconst Post = props => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const prepareStr = str => {\r\n        return str.slice(0,1).toUpperCase() + str.slice(1);\r\n    };\r\n\r\n\r\n    return (\r\n        <Grid item lg={8} offset={2} className={classes.postContainer}>\r\n            {/*Post-Card*/}\r\n            <Card className={classes.post}\r\n                  variant=\"outlined\"\r\n                  onClick={() => props.history.push(`/posts/${props.id}`)}\r\n\r\n            >\r\n                <CardContent className={classes.postContent}  align=\"center\">\r\n                    <Typography variant=\"h4\" className={classes.postTitle} color=\"textSecondary\" gutterBottom>\r\n                        {props.title ? prepareStr(props.title) : null}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            {/*END Post-Card*/}\r\n        </Grid>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Post);\r\n","import React, {useEffect} from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport {asyncLoadPosts} from \"../../redux/actions/actions\";\r\nimport Post from \"./Post/Post\";\r\n\r\n\r\n\r\n\r\n\r\nconst Posts = props => {\r\n\r\n    const {onLoadPosts} = props;\r\n\r\n    //Загрузка постов\r\n    useEffect(() => {\r\n        onLoadPosts()\r\n    }, [onLoadPosts])\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={2} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n\r\n                {props.posts.length\r\n                    ? props.posts.map((item, index) => {\r\n                        return (\r\n                            <Post key={index} title={item.title} author={item.userId} id={item.id}/>\r\n                            )\r\n                    })\r\n                    : <h2>No posts</h2>\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        posts: state.posts.posts,\r\n        title: state.posts.postTitle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLoadPosts: () => dispatch(asyncLoadPosts())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(Posts);\r\n","import React, {useEffect} from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nimport {connect} from 'react-redux';\r\nimport {asyncLoadUserInfo} from \"../../redux/actions/actions\";\r\n\r\n\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n\r\n\r\n\r\n//Styles\r\nconst useStyles = makeStyles({\r\n\r\n    info: {\r\n        marginBottom: '15px',\r\n        padding: '10px',\r\n        display: 'flex',\r\n        jusitfyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        background: '#f5f5f5'\r\n    },\r\n    infoTitle: {\r\n        fontSize: '20px',\r\n        fontWeight: '700',\r\n        margin: 0,\r\n        marginBottom: '15px',\r\n        color: '#333333'\r\n    },\r\n    infoBlock: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: '10px',\r\n    },\r\n    infoText: {\r\n        margin: 0,\r\n        color: '#00000',\r\n    },\r\n    infoContent: {\r\n        width: '100%',\r\n        '&:last-child': {\r\n            padding: 10\r\n        }\r\n    },\r\n\r\n    infoActions: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    infoLink: {\r\n      textDecoration: 'none',\r\n      padding: '10px 12px',\r\n      background: '#5967b3',\r\n      border: '2px solid #5967b3',\r\n      borderRadius: '5px',\r\n      color: '#fff',\r\n      transition: 'all 0.4s ease-in',\r\n      '&:hover': {\r\n          background: '#5065d2'\r\n      }\r\n    },\r\n    infoError: {\r\n        color: 'red'\r\n    },\r\n    accordionHeading: {\r\n        fontWeight: '700'\r\n    },\r\n    accordionDetails: {\r\n        flexDirection: 'column'\r\n    },\r\n    accordionTitle: {\r\n        fontWeight: '500'\r\n    },\r\n    table: {\r\n\r\n    },\r\n    tableContainer: {\r\n        marginBottom: '20px'\r\n    },\r\n    tableTitle: {\r\n        color: '#000',\r\n        fontWeight: '700',\r\n        textAlign: 'center',\r\n        background: '#acb7c1d1'\r\n    },\r\n    tableCellTitle: {\r\n        color: '#000',\r\n        fontWeight: '500'\r\n    },\r\n    post: {\r\n        padding: '10px 20px',\r\n        marginBottom: '15px',\r\n        display: 'flex',\r\n        jusitfyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        transition: 'all 0.5s ease-in',\r\n        border: '2px dashed #B0DD38',\r\n        borderRadius: '5px',\r\n        background: '#f5f5f5',\r\n        '&:hover': {\r\n            background: '#DADADA',\r\n            cursor: 'pointer'\r\n        },\r\n        '&:last-child': {\r\n            marginBottom: 0\r\n        }\r\n    },\r\n\r\n    postTitle: {\r\n        fontSize: '20px',\r\n        fontWeight: 'bold',\r\n        margin: 0\r\n    },\r\n\r\n    postContent: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: 0,\r\n        '&:last-child': {\r\n            padding: 0\r\n        }\r\n    },\r\n    postError: {\r\n        color: 'red'\r\n    }\r\n});\r\n\r\n\r\n//Table create td\r\nfunction createData(name, descr) {\r\n    return { name, descr};\r\n}\r\n\r\n\r\nconst UserInfo = props => {\r\n\r\n    const {onLoadData} = props;\r\n\r\n    //Load users Info\r\n    useEffect(( ) => {\r\n\r\n     onLoadData(props.match.params.id);\r\n    }, [onLoadData, props.match.params.id])\r\n\r\n    //Use style\r\n    const classes = useStyles();\r\n\r\n    //Table content\r\n    const rows = [\r\n        createData('UserName', props.data.username),\r\n        createData('Phone', props.data.phone),\r\n        createData('Email', props.data.email),\r\n        createData('WebSite', props.data.website)\r\n    ];\r\n\r\n\r\n    //Accordion params\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    //Prepare Title\r\n    const prepareStr = str => {\r\n        return str.slice(0,1).toUpperCase() + str.slice(1);\r\n    };\r\n\r\n    //User Posts\r\n    const userPosts = (\r\n        <Box>\r\n            <Accordion\r\n                expanded={expanded === 'panel3'}\r\n                onChange={handleChange('panel3')}\r\n            >\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel3bh-content\"\r\n                    id=\"panel3bh-header\"\r\n                >\r\n                    <Typography component=\"h5\" className={classes.accordionTitle}>\r\n                        User Posts ({props.posts.length ?props.posts.length : 0})\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails className={classes.accordionDetails}>\r\n\r\n                    {props.posts.length\r\n                        ? props.posts.map((post, index) => {\r\n                            return (\r\n                                <Card className={classes.post}\r\n                                      variant=\"outlined\"\r\n                                      onClick={() => props.history.push(`/posts/${post.id}`)}\r\n                                      key={index}\r\n                                >\r\n                                    <CardContent className={classes.postContent}  align=\"center\">\r\n                                        <Typography variant=\"h4\" className={classes.postTitle} color=\"textSecondary\" gutterBottom>\r\n                                            {post.title ? prepareStr(post.title) : null}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            );\r\n                        })\r\n                        : <Card className={classes.post}\r\n                                variant=\"outlined\"\r\n                        >\r\n                            <CardContent className={classes.postContent}  align=\"center\">\r\n                                <Typography variant=\"h4\" className={classes.postError} color=\"textSecondary\" gutterBottom>\r\n                                    No posts!\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    }\r\n\r\n\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </Box>\r\n    );\r\n\r\n\r\n    const infoCard = (<Grid item lg={8} xs={12} offset={2}>\r\n\r\n        <Card className={classes.info}\r\n              variant=\"outlined\"\r\n        >\r\n\r\n            <CardContent className={classes.infoContent} align=\"center\">\r\n                <Typography variant=\"h4\" className={classes.infoTitle} color=\"textSecondary\" gutterBottom>\r\n                    {props.data.name}\r\n                </Typography>\r\n\r\n                {/*TABLE INFO*/}\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                    <Table className={classes.table} size=\"small\" aria-label=\"info table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell colSpan={2} className={classes.tableTitle}>Users Details Info</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {rows.map((row) => (\r\n                                <TableRow key={row.name}>\r\n                                    <TableCell className={classes.tableCellTitle} component=\"th\" scope=\"row\">\r\n                                        {row.name}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row.descr}</TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                {/*END TABLE INFO*/}\r\n\r\n                {/*Accordion Block*/}\r\n                <Box>\r\n                    {/*Address*/}\r\n                    <Accordion\r\n                        expanded={expanded === 'panel1'}\r\n                        onChange={handleChange('panel1')}\r\n                    >\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                        >\r\n                            <Typography component=\"h5\" className={classes.accordionTitle}>Address</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.accordionDetails}>\r\n\r\n                            <Box className={classes.infoBlock}>\r\n                                <Typography component=\"p\" className={classes.infoText}>\r\n                                    ZipCode:&nbsp;\r\n                                </Typography>\r\n                                <Box component=\"span\"><strong> {props.data.address?.zipcode}</strong></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.infoBlock}>\r\n                                <Typography component=\"p\" className={classes.infoText}>\r\n                                    City:&nbsp;\r\n                                </Typography>\r\n                                <Box component=\"span\"><strong> {props.data.address?.city}</strong></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.infoBlock}>\r\n                                <Typography component=\"p\" className={classes.infoText}>\r\n                                    Street:&nbsp;\r\n                                </Typography>\r\n                                <Box component=\"span\"> <strong> {props.data.address?.street}</strong></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.infoBlock}>\r\n                                <Typography component=\"p\" className={classes.infoText}>\r\n                                    Suite:&nbsp;\r\n                                </Typography>\r\n\r\n                               <Box component=\"span\"><strong> {props.data.address && props.data.address.suite}</strong></Box>\r\n                            </Box>\r\n\r\n\r\n                            <Box className={classes.infoBlock}>\r\n                                <Typography component=\"p\" className={classes.infoText}>\r\n                                    Сoordinates:&nbsp;\r\n                                </Typography>\r\n\r\n                                <Typography component=\"p\">\r\n                                    <Box component=\"span\">lat: <strong> {props.data.address?.geo?.lat}</strong></Box>\r\n                                    <br/>\r\n                                    <Box component=\"span\">lng: <strong> {props.data.address?.geo?.lng}</strong></Box>\r\n                                </Typography>\r\n                            </Box>\r\n\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    {/*END Address*/}\r\n\r\n                    {/*Company*/}\r\n                    <Accordion\r\n                        expanded={expanded === 'panel2'}\r\n                        onChange={handleChange('panel2')}\r\n                    >\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel2bh-content\"\r\n                            id=\"panel2bh-header\"\r\n                        >\r\n                            <Typography component=\"h5\" className={classes.accordionTitle}>Company</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails className={classes.accordionDetails}>\r\n                            <Box className={classes.infoBlock}>\r\n                                <Typography component=\"p\" className={classes.infoText}>\r\n                                    Name:&nbsp;\r\n                                </Typography>\r\n\r\n                                <Box component=\"span\"><strong> {props.data.company?.name}</strong></Box>\r\n                            </Box>\r\n\r\n                            <Box className={classes.infoBlock}>\r\n                                <Typography component=\"p\" className={classes.infoText}>\r\n                                    CatchPhrase:&nbsp;\r\n                                </Typography>\r\n\r\n                                <Box component=\"span\"><strong> {props.data.company?.catchPhrase}</strong></Box>\r\n                            </Box>\r\n\r\n                            <Box className={classes.infoBlock}>\r\n                                <Typography component=\"p\" className={classes.infoText}>\r\n                                    BS:&nbsp;\r\n                                </Typography>\r\n\r\n                                <Box component=\"span\"><strong> {props.data.company?.bs}</strong></Box>\r\n                            </Box>\r\n\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    {/*END Company*/}\r\n                </Box>\r\n                {/*END Accordion Block*/}\r\n\r\n            </CardContent>\r\n\r\n\r\n\r\n            <CardActions className={classes.infoActions}>\r\n               <Link to={'/'} className={classes.infoLink}>\r\n                    Home Page\r\n               </Link>\r\n\r\n            </CardActions>\r\n        </Card>\r\n\r\n        {userPosts}\r\n\r\n    </Grid>);\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n\r\n                {props.data.length !== 0\r\n                ? infoCard\r\n                : <Typography component=\"p\" className={classes.infoError}>\r\n                       No user information!\r\n                    </Typography>\r\n                }\r\n\r\n            </Grid>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.userInfo.info,\r\n        posts: state.userInfo.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLoadData: id => dispatch(asyncLoadUserInfo(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserInfo);\r\n","import React, {useEffect} from \"react\"\r\nimport {connect} from 'react-redux';\r\nimport {asyncLoadPostInfo} from \"../../redux/actions/actions\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from '@material-ui/core/Box';\r\nimport {Link} from \"react-router-dom\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n\r\n\r\n//Style\r\nconst useStyles= makeStyles({\r\n    post: {\r\n        marginBottom: '20px',\r\n        padding: '10px 20px',\r\n        display: 'flex',\r\n        jusitfyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        background: '#f5f5f5'\r\n    },\r\n    postTitle: {\r\n        fontSize: '20px',\r\n        fontWeight: '700',\r\n        margin: 0,\r\n        marginBottom: '15px',\r\n        color: '#333333'\r\n    },\r\n    postContent: {\r\n        width: '100%'\r\n    },\r\n    postText: {\r\n        margin: 0,\r\n        marginBottom: '15px',\r\n        color: '#00000',\r\n    },\r\n    postAuthor: {\r\n        color: '#3f51b5',\r\n        textDecoration: 'none',\r\n        transition: 'color 0.5s ease-in',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            color: '#1d3ef9'\r\n        }\r\n    },\r\n    postActions: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    postLink: {\r\n        textDecoration: 'none',\r\n        padding: '10px 12px',\r\n        background: '#5967b3',\r\n        border: '2px solid #5967b3',\r\n        borderRadius: '5px',\r\n        color: '#fff',\r\n        transition: 'all 0.4s ease-in',\r\n        '&:hover': {\r\n            background: '#5065d2'\r\n        }\r\n    },\r\n    postError: {\r\n      color: 'red'\r\n    },\r\n    accordionHeading: {\r\n        fontWeight: '700'\r\n    },\r\n    accordionDetails: {\r\n        flexDirection: 'column'\r\n    },\r\n    accordionTitle: {\r\n        fontWeight: '500'\r\n    },\r\n    comment: {\r\n        marginBottom: '10px',\r\n        padding: '10px 20px',\r\n        border: '2px dashed #B0DD38',\r\n        borderRadius: '5px',\r\n        background: '#f5f5f5',\r\n        '&:last-child': {\r\n            marginBottom: 0\r\n        }\r\n    },\r\n    commentTitle: {\r\n        marginBottom: '10px',\r\n    },\r\n    commentSubtitle: {\r\n        fontSize: '14px'\r\n    },\r\n    commentContent: {\r\n        color: '#00000'\r\n    }\r\n\r\n});\r\n\r\nconst PostInfo = props => {\r\n    const {onLoadData} = props;\r\n\r\n    useEffect(() => {\r\n        onLoadData(props.match.params.id);\r\n    }, [onLoadData, props.match.params.id])\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const prepareStr = str => {\r\n        return str.slice(0,1).toUpperCase() + str.slice(1);\r\n    };\r\n\r\n\r\n    //Accordion params\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n\r\n    //Comments info\r\n    const commentsList = (\r\n        <Box>\r\n            <Accordion\r\n                expanded={expanded === 'panel1'}\r\n                onChange={handleChange('panel1')}\r\n            >\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                >\r\n                    <Typography component=\"h5\" className={classes.accordionTitle}>\r\n                        Post Comments ({props.comments.length ? props.comments.length : 0})\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails className={classes.accordionDetails}>\r\n\r\n\r\n                    {props.comments.length\r\n                        ? props.comments.map((comment, index) => {\r\n                            return (\r\n                                <Box className={classes.comment} key={index}>\r\n                                    <Typography component=\"h6\" className={classes.commentTitle}>\r\n                                        Name: <strong> {comment.name ? prepareStr(comment.name) : null}</strong>\r\n                                    </Typography>\r\n\r\n                                    <Box component=\"span\" className={classes.commentSubtitle}>\r\n                                        Email: <strong>{comment.email}</strong>\r\n                                    </Box>\r\n\r\n                                    <hr/>\r\n                                    <Typography component=\"p\" className={classes.commentContent}>\r\n                                        {comment.body}\r\n                                    </Typography>\r\n                                </Box>\r\n                            );\r\n                        })\r\n\r\n                        :  <Box className={classes.comment}>\r\n                            <Typography component=\"h6\" className={classes.postError}>\r\n                                No comments!\r\n                            </Typography>\r\n                        </Box>\r\n                    }\r\n\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </Box>\r\n    );\r\n\r\n\r\n\r\n    const postInfo = (\r\n        <Grid item lg={8} xs={12} offset={2}>\r\n            <Card className={classes.post}\r\n                  variant=\"outlined\"\r\n            >\r\n                <CardContent className={classes.postContent} align=\"center\">\r\n                    <Typography variant=\"h4\" className={classes.postTitle} color=\"textSecondary\" gutterBottom>\r\n                        {props.data.title ? prepareStr(props.data.title) : null}\r\n                    </Typography>\r\n\r\n                        <Typography component=\"p\" className={classes.postText}>\r\n                            {props.data.body}\r\n                        </Typography>\r\n\r\n                        <Box component=\"span\">\r\n                            Author: <strong>\r\n                            <Link className={classes.postAuthor} to={`/users/${props.data.userId}`}>{props.author}</Link>\r\n                        </strong>\r\n                        </Box>\r\n                </CardContent>\r\n\r\n                <CardActions className={classes.postActions}>\r\n                    <Link to={'/'} className={classes.postLink}>\r\n                        Home Page\r\n                    </Link>\r\n\r\n                    <Link to={'/posts'} className={classes.postLink}>\r\n                        Posts\r\n                    </Link>\r\n\r\n                </CardActions>\r\n            </Card>\r\n\r\n            {commentsList}\r\n\r\n        </Grid>\r\n    );\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                {props.data.length !== 0\r\n                    ? postInfo\r\n                    : <Typography component=\"p\" className={classes.postError}>\r\n                        No post!\r\n                    </Typography>\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.postInfo.info,\r\n        author: state.postInfo.author,\r\n        comments: state.postInfo.comments\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLoadData: id => dispatch(asyncLoadPostInfo(id))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostInfo);\r\n\r\n","import React from \"react\";\n\nimport {Switch, Route} from 'react-router-dom';\n\nimport Home from \"./components/Home/Home\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport Posts from \"./components/Posts/Posts\";\nimport UserInfo from \"./components/UserInfo/UserInfo\";\nimport PostInfo from \"./components/PostInfo/PostInfo\";\n\nconst App = props => {\n\n        return (\n            <Layout>\n                <Switch>\n                    <Route path='/' exact component={Home} />\n                    <Route path='/users/:id' component={UserInfo} />\n                    <Route path='/posts/:id' component={PostInfo}/>\n                    <Route path='/posts' component={Posts} />\n                </Switch>\n            </Layout>\n        );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {SEARCH_USERS_NAME, SET_USERS} from \"../actions/actionsTypes\";\r\n\r\nconst initState = {\r\n    data: [],\r\n    searchName: ''\r\n};\r\n\r\nconst users = (state = initState, action) => {\r\n    switch(action.type){\r\n        case SEARCH_USERS_NAME:\r\n            return {\r\n                ...state,\r\n                searchName: action.payload\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default users;\r\n","import {SET_POSTS} from \"../actions/actionsTypes\";\r\n\r\n\r\nconst initState = {\r\n    posts: [],\r\n    postTitle: 'Posts title redux!!!+-'\r\n};\r\n\r\nconst posts = (state = initState, action) => {\r\n        switch(action.type){\r\n            case SET_POSTS:\r\n                return {\r\n                    ...state,\r\n                    posts: action.payload\r\n                };\r\n\r\n            default:\r\n                return state;\r\n        }\r\n}\r\n\r\nexport default posts;\r\n","import {SET_USER_INFO, SET_USER_POSTS} from \"../actions/actionsTypes\";\r\n\r\n\r\nconst initState = {\r\n    info: [],\r\n    posts: []\r\n};\r\n\r\nconst userInfo = (state = initState, action) => {\r\n    switch(action.type){\r\n        case SET_USER_INFO:\r\n                return {\r\n                    ...state,\r\n                    info: action.payload\r\n                }\r\n\r\n        case SET_USER_POSTS:\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default userInfo;\r\n","import {SET_POST_AUTHOR, SET_POST_COMMENTS, SET_POST_INFO} from \"../actions/actionsTypes\";\r\n\r\nconst initState = {\r\n    info: [],\r\n    author: '',\r\n    comments: []\r\n};\r\n\r\nconst postInfo = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_POST_INFO:\r\n            return {\r\n                ...state,\r\n                info: action.payload\r\n            }\r\n        case SET_POST_AUTHOR:\r\n            return {\r\n                ...state,\r\n                author: action.payload\r\n            }\r\n        case SET_POST_COMMENTS:\r\n            return {\r\n                ...state,\r\n                comments: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postInfo;\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport users from \"./reducers/users\";\r\nimport posts from \"./reducers/posts\";\r\nimport userInfo from \"./reducers/userInfo\";\r\nimport postInfo from \"./reducers/postInfo\";\r\n\r\nexport default combineReducers({users, posts, userInfo, postInfo});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducers from \"./redux/rootReducers\";\nimport {Provider} from 'react-redux';\nimport reduxThunk from 'redux-thunk';\n\nimport {BrowserRouter} from 'react-router-dom';\n\n//Для работы REDUX devTools Chrome\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n            // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n        }) : compose;\n\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\n\n/*\nstore.subscribe(() => {\n    console.log('Subscribe', store.getState());\n});\n */\n\n\n\nconst app = (\n    <BrowserRouter>\n        <Provider store={store}>\n            {/*<React.StrictMode>*/}\n                <App />\n            {/*</React.StrictMode>*/}\n        </Provider>\n    </BrowserRouter>\n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}